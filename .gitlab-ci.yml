stages:
  - deploy

deploy-aio-:
  stage: deploy
  environment: AIO
  script:
    - git clone https://gitlab.com/omnileads/terraform-aws.git
    - cd terraform-aws
    - |
      if [ -n "${OMLOSS_BRANCH}" ]; then
        echo "OMLOSS_BRANCH is defined: ${OMLOSS_BRANCH}"
      fi
    - echo "COMPOSE_PROJECT=ftsaas" >> .env
    - echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> .env
    - echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> .env
    - echo "AWS_DEFAULT_REGION=us-east-1" >> .env
    - echo "TF_VAR_owner=${TF_VAR_owner}" >> .env
    - echo "TF_VAR_domain_name=${TF_VAR_domain_name}" >> .env
    - echo "TF_VAR_aws_region=us-east-2" >> .env
    - echo "TF_VAR_aws_default_region=us-east-1" >> .env
    - echo "TF_VAR_pstn_trunks=${TF_VAR_pstn_trunks}" >> .env
    - echo "TF_VAR_shared_env=sharedfer" >> .env
    - ./run_terraform.sh
    - make init TENANT=ci ARQ=AIO DIALER=no
    - make apply TENANT=ci -auto-approve
    - until curl -sk --head --request GET https://${OML_URL}|grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 90
    - make destroy TENANT=ci -auto-approve    
  tags:
    - deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$RUN_RM_DEPLOY_DOCKER == "true"'